CREATE TABLE private.account(
  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  created_at timestamptz
);

CREATE TABLE api.bucket(
  id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  slug text NOT NULL UNIQUE,
  src text NOT NULL CHECK (src ~ '^[a-zA-Z][a-zA-Z0-9+.-]*:\/\/[^?#\s]+'::text),
  account timestamptz owned_by int REFERENCES private.account(id) NOT NULL,
  UNIQUE (src, account)
  -- TODO: Support credentials associate to bucket for API to use to access data
);

CREATE TABLE private.key(
  id text PRIMARY KEY,
  secret text NOT NULL,
  account int REFERENCES private.account(id) NOT NULL,
  created_at timestamptz
);

-- TODO: Auto generate key & secret
CREATE TABLE private.bucket_key(
  bucket int REFERENCES api.bucket(id) NOT NULL,
  account text REFERENCES private.account(id) NOT NULL,
  created_at timestamptz
);

-- TODO: Create unique index on bucket + key
INSERT INTO api.bucket(slug, src, created_at)
  VALUES ('bucket-1', 's3://test', now()),
('bucket-2', 's3://test', now());

INSERT INTO private.account(id)
  VALUES (1);

INSERT INTO private.key(id, secret, account)
  VALUES ('AK1234567890', 'SECRET', 1);

INSERT INTO private.bucket_key(bucket, key)
  VALUES (4, 'AK1234567890');

